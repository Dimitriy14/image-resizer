// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Dimitriy14/image-resizing/storage (interfaces: Storage)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockStorage is a mock of Storage interface
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// DeleteImage mocks base method
func (m *MockStorage) DeleteImage(arg0 string) error {
	ret := m.ctrl.Call(m, "DeleteImage", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteImage indicates an expected call of DeleteImage
func (mr *MockStorageMockRecorder) DeleteImage(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteImage", reflect.TypeOf((*MockStorage)(nil).DeleteImage), arg0)
}

// Download mocks base method
func (m *MockStorage) Download(arg0 string) ([]byte, error) {
	ret := m.ctrl.Call(m, "Download", arg0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Download indicates an expected call of Download
func (mr *MockStorageMockRecorder) Download(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Download", reflect.TypeOf((*MockStorage)(nil).Download), arg0)
}

// Upload mocks base method
func (m *MockStorage) Upload(arg0 string, arg1 []byte) (string, error) {
	ret := m.ctrl.Call(m, "Upload", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Upload indicates an expected call of Upload
func (mr *MockStorageMockRecorder) Upload(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Upload", reflect.TypeOf((*MockStorage)(nil).Upload), arg0, arg1)
}

// UploadWithOriginal mocks base method
func (m *MockStorage) UploadWithOriginal(arg0 string, arg1, arg2 []byte) (string, string, error) {
	ret := m.ctrl.Call(m, "UploadWithOriginal", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// UploadWithOriginal indicates an expected call of UploadWithOriginal
func (mr *MockStorageMockRecorder) UploadWithOriginal(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadWithOriginal", reflect.TypeOf((*MockStorage)(nil).UploadWithOriginal), arg0, arg1, arg2)
}
